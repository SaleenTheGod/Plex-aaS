---

- name: Ensure the plex user exists and uses the bash shell
  user:
    name: "{{ emby_user }}"
    shell: /bin/bash
    state: present

- name: Gather OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution }}.yml'
    - '{{ ansible_os_family }}.yml'
  tags:
    - vars

- name: Include OS Specific Tasks
  include_tasks: "{{ item }}"
  with_first_found:
    - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution }}.yml'
    - '{{ ansible_os_family }}.yml'
  tags:
    - vars

- name: Check if User creation breadcrumb exists
  stat:
    path: "/home/{{ emby_user }}/.emby_usr_breadcrumb"
  register: emby_usr_breadcrumb
  ignore_errors: true
  become: true

- name: Ensure we have a 'wheel' group
  group:
    name: wheel
    state: present
  become: true

- name: Add Unix Admins users
  user:
    name: "{{ emby_user }}"
    group: users
    groups: wheel
    shell: /bin/bash
    password: "{{ local_unix_password }}"
    update_password: on_create
    state: present
  become: true
  when: emby_usr_breadcrumb.stat.exists == false

- name: Ensure emby_usr_breadcrumb exists
  file:
    path: "/home/{{ emby_user }}/.emby_usr_breadcrumb"
    state: touch
  become: true
  when: emby_usr_breadcrumb.stat.exists == false

- name: Allow wheel group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
  become: true

- name: Add sudoers users to wheel group
  user:
    name: "{{ emby_user }}"
    groups: wheel
    append: yes
    state: present
    createhome: yes
  become: true

- name: Add new user to allowed ssh list
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^AllowUsers'
    line: 'AllowUsers {{ emby_user }}'
  become: true